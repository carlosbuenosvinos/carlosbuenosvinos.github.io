<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Databases on Carlos Buenosvinos</title><link>https://carlosbuenosvinos.com/categories/databases/</link><description>Recent content in Databases on Carlos Buenosvinos</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 24 Nov 2016 08:00:31 +0000</lastBuildDate><atom:link href="https://carlosbuenosvinos.com/categories/databases/index.xml" rel="self" type="application/rss+xml"/><item><title>Good ORMs do not call __construct a.k.a. where to fire my Domain Events</title><link>https://carlosbuenosvinos.com/good-orms-do-not-call-__construct/</link><pubDate>Thu, 24 Nov 2016 08:00:31 +0000</pubDate><guid>https://carlosbuenosvinos.com/good-orms-do-not-call-__construct/</guid><description>&lt;p>&lt;strong>tl;dr: Entity constructor should be called once in its entire life. That’s why good ORMs don’t use constructor to reconstitute objects from the database. Good ORMs use reflection, deserialization or proxies. So, fire your Domain Events in the constructor.&lt;/strong>&lt;/p>
&lt;p>Last week, I saw a presentation about going from &lt;!-- raw HTML omitted -->coupled-to-framework code to a Domain-Driven Design approach&lt;!-- raw HTML omitted --> in a sample application. It was a good talk. However, in my honest opinion, there were some mistakes that are important to address. In order not to troll, I have checked with the speakers to write this post ;).&lt;/p>
&lt;p>One of the mistakes, that I would like to point is &lt;em>where a Domain Event about “a new product was created”&lt;/em> should be trigger specifically inside the Product Entity.&lt;/p>
&lt;p>Speakers were showing a “Video” Entity with a named constructor called “create”. They were calling _new _inside the named constructor &lt;strong>and then&lt;/strong> firing the event. I mean, the Domain Event was not fired inside of the real constructor. Let’s see the code we’re talking about (the whole repository can be found &lt;!-- raw HTML omitted -->here&lt;!-- raw HTML omitted -->):&lt;/p></description></item><item><title>Rendimiento con Domain Events, Proyecciones y principios de CQRS</title><link>https://carlosbuenosvinos.com/rendimiento-con-domain-events-proyecciones-y-principios-de-cqrs/</link><pubDate>Mon, 29 Feb 2016 07:00:38 +0000</pubDate><guid>https://carlosbuenosvinos.com/rendimiento-con-domain-events-proyecciones-y-principios-de-cqrs/</guid><description>&lt;p>Cuando desarrollamos una aplicación nueva, todo va muy rapidito. Hay poco tráfico, pocas queries y si hay alguna más “dura” usamos alguna cache como Memcached o Redis. Pero a medida que agregamos más funcionalidad a una página, el número de queries a base de datos u otras infraestructuras va creciendo. Hasta que sin saber cómo, haces 300 queries, y no es broma, en la ficha de algún producto.&lt;/p>
&lt;p>El problema es que estamos acostumbrados a hacer muchas queries de lectura y muy pocas de escritura en estructuras bastante normalizadas. Eso escala mal en base a nueva funcionalidad. Un buen approach en busca del máximo rendimiento es la consistencia eventual, estructuras desnormalizadas y proyecciones.&lt;/p>
&lt;p>Os dejo el video de la formación de @AtrapaloEng sobre cómo el uso de Eventos de Dominio y el uso de conceptos de CQRS nos pueden ayudar enormemente a mejorar el rendimiento de nuestras aplicaciones.&lt;/p></description></item><item><title>Doctrine 2.5, DDD, Entities and Identities</title><link>https://carlosbuenosvinos.com/doctrine-25-ddd-entities-and-identities/</link><pubDate>Wed, 28 Oct 2015 08:00:22 +0000</pubDate><guid>https://carlosbuenosvinos.com/doctrine-25-ddd-entities-and-identities/</guid><description>&lt;p>If you’re developing applications in a Domain-Driven Design style and using Doctrine 2.5, you may be struggling with implementing your entities identities, I mean, UserId, ProductId, and so on. Embeddables are cool, but limited. Surrogates are not necessary anymore. Here are some short tips and examples about how to proceed.&lt;/p></description></item><item><title>MySQL 5.6 Developer Certification Beta Exam Review</title><link>https://carlosbuenosvinos.com/mysql-5-6-developer-certification-beta-exam-review/</link><pubDate>Tue, 24 Dec 2013 17:35:23 +0000</pubDate><guid>https://carlosbuenosvinos.com/mysql-5-6-developer-certification-beta-exam-review/</guid><description>&lt;p>Last friday, I did the MySQL 5.6 Developer Certification Beta Exam. This is the exam that Oracle is launching because of the new MySQL 5.6 Developer certification that will replace the old MySQL 5.0 certification in 2014. I don’t know if I’m certified yet because in beta, all candidate exams have to be reviewed in order to analyse how difficult it was, what questions were not appropriated, typos, etc.) before going live.&lt;/p></description></item></channel></rss>