<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ansible on Carlos Buenosvinos</title><link>https://carlosbuenosvinos.com/tags/ansible/</link><description>Recent content in ansible on Carlos Buenosvinos</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 14 Sep 2016 16:22:39 +0000</lastBuildDate><atom:link href="https://carlosbuenosvinos.com/tags/ansible/index.xml" rel="self" type="application/rss+xml"/><item><title>GitHub + Ansible: deploy your public SSH keys to your servers</title><link>https://carlosbuenosvinos.com/github-ansible-deploy-your-public-ssh-keys-to-your-server/</link><pubDate>Wed, 14 Sep 2016 16:22:39 +0000</pubDate><guid>https://carlosbuenosvinos.com/github-ansible-deploy-your-public-ssh-keys-to-your-server/</guid><description>&lt;p>When I work with some mates in a side project, I need to give them access to the server. This is a quick tip about how to easily do it using GitHub and Ansible. The solution is simple and elegant.&lt;/p></description></item><item><title>Setup your MacOS (or other OS) development team with Ansible</title><link>https://carlosbuenosvinos.com/setup-your-macos-development-team-with-ansible/</link><pubDate>Wed, 30 Dec 2015 10:41:28 +0000</pubDate><guid>https://carlosbuenosvinos.com/setup-your-macos-development-team-with-ansible/</guid><description>&lt;p>Imagine that a new developer joins your team, installing everything needed for developing, including the application being developed is not an easy o fast task. I’m sure you have a wiki process, a markdown file in your repo or something similar. For a normal PHP web application, there is so much to do: installing PHP, composer and global tools, npm and/or bower, mysql, redis, etc. or setting up you Docker/Vagrant environment if you choose an isolated environment.&lt;/p>
&lt;p>I remember when GitHub released &lt;!-- raw HTML omitted -->Boxen&lt;!-- raw HTML omitted --> in 2012. A tool for managing Mac development boxes with love. It’s based in Puppet. The main idea is use Puppet for provisioning not remote machines or servers but you local Mac. Let’s see a silly idea about how to do it with Ansible.&lt;/p></description></item><item><title>Deploying Symfony (and PHP) apps with Ansistrano</title><link>https://carlosbuenosvinos.com/deploying-symfony-and-php-apps-with-ansistrano/</link><pubDate>Tue, 20 Oct 2015 08:00:30 +0000</pubDate><guid>https://carlosbuenosvinos.com/deploying-symfony-and-php-apps-with-ansistrano/</guid><description>&lt;p>For a long time, &lt;!-- raw HTML omitted -->Capifony&lt;!-- raw HTML omitted --> was, without any doubt, the facto option for deploying Symfony2 applications. Capifony is a ruby gem based in &lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->Capistrano&lt;!-- raw HTML omitted --> v2, an open source tool for running scripts on multiple servers with a deployment flow built-in. It’s primary use is for easily deploying applications. While it was built specifically for deploying &lt;!-- raw HTML omitted -->Rails&lt;!-- raw HTML omitted --> apps, it’s pretty simple to customize it to deploy other types of applications. At that time, alternatives were shell scripting or Fabric. Now there’s a better one, Ansistrano.&lt;/p></description></item></channel></rss>