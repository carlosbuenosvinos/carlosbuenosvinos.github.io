<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>embeddables on Carlos Buenosvinos</title>
    <link>https://carlosbuenosvinos.github.io/tags/embeddables/</link>
    <description>Recent content in embeddables on Carlos Buenosvinos</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 28 Oct 2015 08:00:22 +0000</lastBuildDate>
    
	<atom:link href="https://carlosbuenosvinos.github.io/tags/embeddables/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Doctrine 2.5, DDD, Entities and Identities</title>
      <link>https://carlosbuenosvinos.github.io/doctrine-25-ddd-entities-and-identities/</link>
      <pubDate>Wed, 28 Oct 2015 08:00:22 +0000</pubDate>
      
      <guid>https://carlosbuenosvinos.github.io/doctrine-25-ddd-entities-and-identities/</guid>
      <description>&lt;p&gt;If you&amp;#8217;re developing applications in a Domain-Driven Design style and using Doctrine 2.5, you may be struggling with implementing your entitiesÂ identities, I mean, UserId, ProductId, and so on. Embeddables are cool, but limited. Surrogates are not necessary anymore. Here are some short tips and examples about how to proceed.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>