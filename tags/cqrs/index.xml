<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cqrs on Carlos Buenosvinos</title><link>https://carlosbuenosvinos.com/tags/cqrs/</link><description>Recent content in cqrs on Carlos Buenosvinos</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 15 Sep 2016 11:00:11 +0000</lastBuildDate><atom:link href="https://carlosbuenosvinos.com/tags/cqrs/index.xml" rel="self" type="application/rss+xml"/><item><title>“Domain-Driven Design in PHP” (@dddbook) is finished</title><link>https://carlosbuenosvinos.com/domain-driven-design-in-php-book-is-finished/</link><pubDate>Thu, 15 Sep 2016 11:00:11 +0000</pubDate><guid>https://carlosbuenosvinos.com/domain-driven-design-in-php-book-is-finished/</guid><description>&lt;p>Today, Keyvan, Christian and me are very happy to announce that &lt;!-- raw HTML omitted -->“Domain-Driven Design in PHP”&lt;!-- raw HTML omitted --> book is 100% complete. &lt;strong>380 pages&lt;/strong> and around &lt;strong>1400 readers&lt;/strong> so far.&lt;/p>
&lt;h4 id="thanks">Thanks&lt;/h4>
&lt;p>Thanks, thanks, thanks.&lt;/p>
&lt;p>Thanks to everyone that has supported us in this project.&lt;/p>
&lt;p>Thanks to &lt;strong>Christian&lt;/strong> and &lt;strong>Keyvan&lt;/strong>. We don’t need words to understand each other.&lt;/p>
&lt;p>Thanks to our &lt;strong>families&lt;/strong> and &lt;strong>friends&lt;/strong>. Love is what you need to keep pushing.&lt;/p>
&lt;p>Thanks to &lt;strong>Edd Mann&lt;/strong> for helping at the beginning with the language implementation details ;).&lt;/p>
&lt;p>Thanks to &lt;strong>Matthias Noback&lt;/strong> for his suggestions and his foreword.&lt;/p>
&lt;p>Thanks to &lt;strong>Vaughn Vernon&lt;/strong> for being pragmatic and inspiring.&lt;/p>
&lt;p>Thanks to &lt;strong>Ricard Clau, Albert Casademont, Victor Guardiola&lt;/strong> and &lt;strong>Jordi Abad&lt;/strong> for your contributions.&lt;/p>
&lt;p>Thanks to &lt;strong>Natalye Childress&lt;/strong> for non stopping asking about uppercase or lowercase. With your work, the book can be read.&lt;/p>
&lt;p>Thanks to everyone that committed fixes, you are great: &lt;strong>Jonathan Wondrusch, César Rodríguez, Yannick Voyer, Oriol González, Henry Snoek, Tom Jowitt, Sascha Schimke, Sven Herrmann, Daniel Abad, Luis Rovirosa, Luis Cordova, Raúl Ramos, Juan Maturana, Nil Portugués, Nikolay Zujev, Fernando Pradas, Raúl Araya, Neal Brooks, Hubert Béague, Aleksander Rekść, Sebastian Machuca, Nicolas Oelgart, and Marc Aube.&lt;/strong>&lt;/p></description></item><item><title>Rendimiento con Domain Events, Proyecciones y principios de CQRS</title><link>https://carlosbuenosvinos.com/rendimiento-con-domain-events-proyecciones-y-principios-de-cqrs/</link><pubDate>Mon, 29 Feb 2016 07:00:38 +0000</pubDate><guid>https://carlosbuenosvinos.com/rendimiento-con-domain-events-proyecciones-y-principios-de-cqrs/</guid><description>&lt;p>Cuando desarrollamos una aplicación nueva, todo va muy rapidito. Hay poco tráfico, pocas queries y si hay alguna más “dura” usamos alguna cache como Memcached o Redis. Pero a medida que agregamos más funcionalidad a una página, el número de queries a base de datos u otras infraestructuras va creciendo. Hasta que sin saber cómo, haces 300 queries, y no es broma, en la ficha de algún producto.&lt;/p>
&lt;p>El problema es que estamos acostumbrados a hacer muchas queries de lectura y muy pocas de escritura en estructuras bastante normalizadas. Eso escala mal en base a nueva funcionalidad. Un buen approach en busca del máximo rendimiento es la consistencia eventual, estructuras desnormalizadas y proyecciones.&lt;/p>
&lt;p>Os dejo el video de la formación de @AtrapaloEng sobre cómo el uso de Eventos de Dominio y el uso de conceptos de CQRS nos pueden ayudar enormemente a mejorar el rendimiento de nuestras aplicaciones.&lt;/p></description></item></channel></rss>