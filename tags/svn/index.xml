<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>svn on Carlos Buenosvinos</title>
    <link>https://carlosbuenosvinos.github.io/tags/svn/</link>
    <description>Recent content in svn on Carlos Buenosvinos</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 30 Jun 2013 23:30:13 +0000</lastBuildDate>
    
	<atom:link href="https://carlosbuenosvinos.github.io/tags/svn/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Guía para el desarrollo PHP Profesional</title>
      <link>https://carlosbuenosvinos.github.io/desarrollo-php-profesional/</link>
      <pubDate>Sun, 30 Jun 2013 23:30:13 +0000</pubDate>
      
      <guid>https://carlosbuenosvinos.github.io/desarrollo-php-profesional/</guid>
      <description>&lt;p&gt;Os dejo un material de hace un tiempo (&lt;span style=&#34;line-height: 1.714285714; font-size: 1rem;&#34;&gt;16 de mayo de 2011) pero todavía bastante válido.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Como me gusta decir, PHP es fácil de aprender y difícil de dominar. Es una de las opciones más rápidas y efectivas para la creación y mantenimiento de aplicaciones web de todo tipo. Su simplicidad es la ventaja tecnológica #1 que tiene sobre sus principales competidores aunque no implica que su uso sea sólo orientado al desarrollo de aplicaciones simples. Con PHP podemos crear sistemas avanzados y potencialmente muy complejos. Para poder garantizar la escalabilidad de estos últimos necesitamos un ciclo de desarrollo y un equipo técnico alineado para hacer más con menos. En esta ponencia, vamos a repasar las características principales de PHP y cómo mejorar nuestro ciclo de desarrollo a través de herramientas y buenas prácticas.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>